{"version":3,"sources":["./src/app/measure/measure.component.ts","./src/app/measure/measure.component.html","./src/environments/environment.ts","./src/app/rest-client.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/experiments/experiments.component.ts","./src/app/experiments/experiments.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;ICChD,sEACE;IAAA,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IAC/B,oEAAG;IAAA,uDAA0B;IAAA,4DAAI;IACjC,oEAAG;IAAA,uDAA4B;IAAA,4DAAI;IACnC,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAC3B,4DAAM;;;IAJD,0DAAwB;IAAxB,iGAAwB;IACxB,0DAA0B;IAA1B,mGAA0B;IAC1B,0DAA4B;IAA5B,qGAA4B;IAC5B,0DAAkB;IAAlB,2FAAkB;;ADKhB,MAAM,gBAAgB;IAI3B,YAAoB,IAAuB,EACvB,KAAqB;QADrB,SAAI,GAAJ,IAAI,CAAmB;QACvB,UAAK,GAAL,KAAK,CAAgB;QAHzC,aAAQ,GAAc,EAAE,CAAC;IAKzB,CAAC;IAED,mFAAmF;IACnF,6BAA6B;IAC7B,0BAA0B;QACxB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,mCAAmC,YAAY,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,YAAY,CAAC;aAC/C,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;;gFApBU,gBAAgB;gGAAhB,gBAAgB;QCV7B,4EAAkC;QAAA,+DAAI;QAAA,4DAAS;QAC/C,4GACE;;QADG,0DAA0B;QAA1B,iFAA0B;;6FDSlB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA2C;AACkB;;;AAUtD,MAAM,iBAAiB;IAW9B,gCAAgC;IAE9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAX5B,WAAM,GAAG,uBAAuB,CAAC;QACjC,gBAAW,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAE,GAAG;aACnC,CAAC;SACH,CAAC;IAMF,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEO,YAAY;QAClB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,cAAc,EAAE,kBAAkB;YAClC,6BAA6B,EAAE,GAAG;SACnC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,oEAAoE;IACpE,QAAQ,CAAC,OAAqB;QAC5B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,QAAQ,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,yEAAyE;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IAED,sBAAsB;IACxB,wBAAwB;IACtB,YAAY;QACV,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,YAAY,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAC,CAAC,CAAC;IACvE,CAAC;IAED,0BAA0B,CAAC,YAAoB;QAC7C,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,aAAa,YAAY,EAAE,CAAC;QAEtD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAC,CAAC,CAAC;IACvE,CAAC;IAED,eAAe;QACb,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,eAAe,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAC,CAAC,CAAC;IAC3E,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,eAAe,CAAC;QAC1C,MAAM,IAAI,GAAG,EAAC,IAAI,EAAC,CAAC;QAEpB,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,YAAY,IAAI,EAAE,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAC,CAAC;aAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;;kFArEU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAGA;AACT;AACgB;AACN;AACkB;AAClB;AACd;;AAmBpC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANF;YACL,qEAAgB;YAChB,uEAAa;YACb,oEAAgB;YAChB,0DAAW;SACd;mIAIQ,SAAS,mBAflB,2DAAY;QACZ,2EAAgB;QAChB,qEAAc;QACd,uFAAoB;QACpB,qEAAc,aAGV,qEAAgB;QAChB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;6FAKN,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2EAAgB;oBAChB,qEAAc;oBACd,uFAAoB;oBACpB,qEAAc;iBACf;gBACC,OAAO,EAAE;oBACL,qEAAgB;oBAChB,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;iBACd;gBACH,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAkD;;;AAS3C,MAAM,cAAc;IAGzB,YAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;IAAE,CAAC;IAC9C,kFAAkF;IAClF,4BAA4B;IAC1B,IAAI;QACJ,IAAI,QAAmB;QACvB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,QAAQ;IACR,CAAC;;4EAZQ,cAAc;8FAAd,cAAc;QCT3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDSN,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;ICIhD,sEACE;IAAA,uEAA8C;IAAA,uDAA+B;IAAA,4DAAI;IACnF,4DAAM;;;IADD,0DAA0C;IAA1C,wHAA0C;IAAC,0DAA+B;IAA/B,6GAA+B;;ADKxE,MAAM,oBAAoB;IAQ/B,YAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAN3C,gBAAW,GAAkB,EAAE,CAAC;QAChC,kBAAa,GAAgB;YAC3B,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE,EAAE;SACT,CAAC;IAGF,CAAC;IAED,mFAAmF;IACnF,6BAA6B;IAC7B,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,8DAA8D;IAC9D,iBAAiB;IACjB,uDAAuD;IACvD,oCAAoC;IACpC,EAAE;IACF,oBAAoB;IACpB,IAAI;IAEJ,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,yBAAyB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;wFAhCU,oBAAoB;oGAApB,oBAAoB;QCRjC,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QAEjC,gHACE;QAGF,4EAAmC;QAA3B,4IAAS,oBAAgB,IAAC;QAAC,0EAAe;QAAA,4DAAS;QAI3D,sEACE;QAAA,2EAA4B;QAAA,2EAAgB;QAAA,4DAAQ;QACpD,2EAA8F;QAAjC,oMAAgC;QAA7F,4DAA8F;QAAA,gEAAI;QAAA,iEAClG;QAAA,6EAAoC;QAA5B,6IAAS,qBAAiB,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAC9D,4DAAM;;QAZD,0DAA6B;QAA7B,oFAA6B;QAU6B,0DAAgC;QAAhC,2FAAgC;;6FDJlF,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AACQ;AACY;AAClB;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,uFAAoB;KAChC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM;KAClD;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAIL;AAC2E;;;;;;;;ICDtH,sEAEI;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAQ;IACxC,2EAA+G;IAA9D,mVAA4B;IAA7E,4DAA+G;IAAA,gEAAI;IAAA,gEACnH;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAQ;IACxC,2EAA+G;IAA9D,mVAA4B;IAA7E,4DAA+G;IAAA,gEAAI;IAAA,iEAEnH;IAAA,6EAAyD;IAArB,kTAAoB;IAAC,iEAAK;IAAA,4DAAS;IAE3E,4DAAM;;;IAN4E,0DAAgC;IAAhC,yGAAgC;IAA7D,0FAA4B;IAEC,0DAAgC;IAAhC,yGAAgC;IAA7D,0FAA4B;;;IAMjF,sEACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,6GACF;;ADHO,MAAM,cAAc;IAmBzB,YAAoB,IAAuB,EAAU,MAAc;QAA/C,SAAI,GAAJ,IAAI,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlBrE,oBAAoB;QAClB,UAAK,GAAiB,EAAC,QAAQ,EAAE,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAMxE,mBAAc,GAAG;YACf,MAAM,EAAE,yCAAyC;YACjD,UAAU,EAAE,+BAA+B;YAC3C,WAAW,EAAE,mDAAmD;YAChE,SAAS,EAAE,eAAe;YAC1B,aAAa,EAAE,2BAA2B;YAC1C,iBAAiB,EAAE,cAAc;YACjC,KAAK,EAAE,2CAA2C;YAClD,aAAa,EAAE,cAAc;SAC9B,CAAC;IAGF,CAAC,CAAC,yCAAyC;IAC3C,0BAA0B;IAC1B,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,kEAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG,6DAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE9B,gFAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC5E,IAAI,CAAC,cAAc,CAAC,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE;iBAC7B,IAAI,CAAC,KAAK,CAAC,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;IACR,CAAC;;4EAvCU,cAAc;8FAAd,cAAc;QCb3B,qEACI;QAAA,sFACJ;QAAA,4DAAK;QACL,2GAEI;QASJ,0GACE;QAGF,kEACA;;QAhBK,0DAAa;QAAb,2EAAa;QAWb,0DAAmB;QAAnB,iFAAmB;;6FDDX,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {RestClientService} from '../rest-client.service';\nimport {Measure} from '../measure';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.css']\n})\nexport class MeasureComponent implements OnInit {\n\n  measures: Measure[] = [];\n\n  constructor(private rest: RestClientService,\n              private route: ActivatedRoute\n  ) {\n  }\n\n  // declaring a variable and get the rest service to assign measures to the variable\n  // subscribe to show an error\n  get_measure_for_experiment(): void {\n    const experimentId = this.route.snapshot.paramMap.get('id');\n    console.log(`Getting measures for experiment ${experimentId}`);\n    this.rest.get_measure_for_experiment(experimentId)\n      .subscribe(m => this.measures = m);\n  }\n\n  ngOnInit(): void {\n    this.get_measure_for_experiment();\n  }\n\n}\n","<button routerLink=\"/experiments\">Back</button>\n<div *ngFor=\"let m of measures\">\n  <p>Type: {{m.measure_type}}</p>\n  <p>Timestamp: {{m.timestamp}}</p>\n  <p>Experiment: {{m.experiment}}</p>\n  <p>Value: {{m.value}}</p>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport { logindetails } from './login/logindetails';\nimport { Experiments } from './experiments/experiments';\nimport { Measure } from './measure';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestClientService {\n\n  private apiUrl = 'http://localhost:5000';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    })\n  };\n\n  private bearerToken?: string;\n// Make http class in the client\n\n  constructor(private http: HttpClient) {\n  }\n\n  set_bearer_token(token: string): void {\n    this.bearerToken = token;\n  }\n\n  private make_headers(): HttpHeaders {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n\n    return headers.append('Authorization', `Bearer ${this.bearerToken}`);\n  }\n\n  // get login details and add an argument that takes in login details\n  getlogin(details: logindetails): Observable<logindetails> {\n    const url = `${this.apiUrl}/login`;\n    console.log(details);\n    console.log(url);\n    // post the details to the server //tell python to interpret this as json\n    return this.http.post<logindetails>(url, details, this.httpOptions);\n  }\n\n  // ngOnInit(): void {}\n// get array of measures\n  get_measures(): Observable<Measure[]> {\n    const url = `${this.apiUrl}/measures/`;\n    return this.http.get<Measure[]>(url, {headers: this.make_headers()});\n  }\n\n  get_measure_for_experiment(experimentId: string): Observable<Measure[]> {\n    const url = `${this.apiUrl}/measures/${experimentId}`;\n\n    console.log(`Trying for ${url}`);\n    return this.http.get<Measure[]>(url, {headers: this.make_headers()});\n  }\n\n  get_experiments(): Observable<Experiments[]> {\n    const url = `${this.apiUrl}/experiments/`;\n    return this.http.get<Experiments[]>(url, {headers: this.make_headers()});\n  }\n\n  save_experiment(name: string): void {\n    const url = `${this.apiUrl}/experiments/`;\n    const body = {name};\n\n    console.log(`POSTing to ${url} to save ${name}`);\n    console.log(body);\n\n    this.http.post<any>(url, body, {headers: this.make_headers()})\n      .pipe(response => {\n        console.log(response);\n        return response;\n      });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web-interface';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MeasureComponent } from './measure/measure.component';\nimport { UsersComponent } from './users/users.component';\nimport { ExperimentsComponent } from './experiments/experiments.component';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MeasureComponent,\n    UsersComponent,\n    ExperimentsComponent,\n    LoginComponent\n  ],\n    imports: [\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { RestClientService } from '../rest-client.service';\nimport { Measure } from '../measure';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n\n  constructor(private rest: RestClientService){}\n  //declaring a variable and get the rest service to assign measures to the variable\n  //subscribe to show an error\n    bleh(){\n    var measures: Measure[]\n    this.rest.get_measures().subscribe(m => measures = m);\n    }\n\n    ngOnInit(): void {\n    }\n\n  }\n\n\n\n","<p>users works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {RestClientService} from '../rest-client.service';\nimport {Experiments} from './experiments';\nimport {Measure} from '../measure';\n\n@Component({\n  selector: 'app-experiments',\n  templateUrl: './experiments.component.html',\n  styleUrls: ['./experiments.component.css']\n})\nexport class ExperimentsComponent implements OnInit {\n\n  experiments: Experiments[] = [];\n  newExperiment: Experiments = {\n    experiment_id: '',\n    name: ''\n  };\n\n  constructor(private rest: RestClientService) {\n  }\n\n  // declaring a variable and get the rest service to assign measures to the variable\n  // subscribe to show an error\n  getexperiments(): void {\n    this.rest.get_experiments().subscribe(e => this.experiments = e);\n  }\n\n  // get_measure_for_experiment(experimentId: string): Measure {\n  //   let measure;\n  //   this.rest.get_measure_for_experiment(experimentId)\n  //     .subscribe(m => measure = m);\n  //\n  //   return measure;\n  // }\n\n  save_experiment(): void {\n    console.log(`Saving new experiment ${this.newExperiment.name}`);\n    this.rest.save_experiment(this.newExperiment.name);\n  }\n\n  ngOnInit(): void {\n    this.getexperiments();\n  }\n\n}\n\n\n","<!DOCTYPE html>\n\n<h1>Experiments and Measures</h1>\n\n<div *ngFor=\"let e of experiments\">\n  <a routerLink=\"/measures/{{e.experiment_id}}\">{{e.experiment_id}}, {{e.name}}</a>\n</div>\n<!--<a *ngFor=\"let e of experiments\" routerLink=\"\"> {{e.experiment_id}}, {{e.name}} </a>-->\n<button (click)=\"getexperiments()\">Get experiments</button>\n\n\n\n<div>\n  <label for=\"new_experiment\">Experiment name:</label>\n  <input type=\"text\" id=\"new_experiment\" name=\"new_experiment\" [(ngModel)]=\"newExperiment.name\"><br><br>\n  <button (click)=\"save_experiment()\">Save experiment</button>\n</div>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {MeasureComponent} from './measure/measure.component';\nimport {ExperimentsComponent} from './experiments/experiments.component';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'measures/:id',\n    component: MeasureComponent,\n  },\n  {\n    path: 'experiments',\n    component: ExperimentsComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '', redirectTo: '/login', pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {RestClientService} from '../rest-client.service';\nimport {logindetails} from './logindetails';\nimport {Input} from '@angular/core';\nimport {initializeApp} from 'firebase/app';\nimport {getAuth, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword} from 'firebase/auth';\nimport {FirebaseApp} from '@angular/fire/app';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n// create a variable\n  login: logindetails = {username: 'phigg@home.cern', password: '123456'};\n\n  bearerToken?: string;\n  app?: FirebaseApp;\n  auth?;\n\n  firebaseConfig = {\n    apiKey: 'AIzaSyDWxR3Y5dQj09Nr15VtC13VGnRWh9WgOV4',\n    authDomain: 'coding-output.firebaseapp.com',\n    databaseURL: 'https://coding-output-default-rtdb.firebaseio.com',\n    projectId: 'coding-output',\n    storageBucket: 'coding-output.appspot.com',\n    messagingSenderId: '953911328931',\n    appId: '1:953911328931:web:a4d2f0eb0bb35cdd1eff16',\n    measurementId: 'G-T8DCDWNTQJ'\n  };\n\n  constructor(private rest: RestClientService, private router: Router) {\n  } // linking rest client to login component\n  // create a login function\n  do_login(): void {\n    this.app = initializeApp(this.firebaseConfig);\n    this.auth = getAuth(this.app);\n\n    signInWithEmailAndPassword(this.auth, this.login.username, this.login.password)\n      .then(userCredential => {\n        console.log('Logged in');\n        userCredential.user.getIdToken()\n          .then(token => {\n            this.bearerToken = token;\n            this.rest.set_bearer_token(token);\n            this.router.navigate(['/experiments']);\n          });\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<!DOCTYPE html>\n<h1>\n    Login to safe repository\n</h1>\n<div *ngIf=\"login\">\n\n    <label for=\"username\">Username: </label>\n    <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"login.username\" placeholder=\"{{login.username}}\"><br><br>\n    <label for=\"password\">Password: </label>\n    <input type=\"text\" id=\"password\" name=\"password\" [(ngModel)]=\"login.password\" placeholder=\"{{login.username}}\"><br><br>\n\n    <button type=\"button\" value=\"Login\" (click)=\"do_login()\">login</button>\n\n</div>\n\n<div *ngIf=\"bearerToken\">\n  Bearer token: {{bearerToken}}\n</div>\n\n<html>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}