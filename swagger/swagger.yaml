openapi: 3.0.0
info:
  title: MyMonit
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: users
  - name: experiments
  - name: measures
  - name: scientist/experiment
paths:
  /users/:
    post:
      tags:
        - users
      summary: create users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: S123
                name: Foo Bar
                username: firebaseUid
                email: foo@bar.com
                role: SCIENTIST
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - users
      summary: retrieve users
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{user_id}:
    put:
      tags:
        - users
      summary: update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Foo Bar
                username: firebaseUid
                email: foo@bar
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /experiments/:
    get:
      tags:
        - experiments
      summary: retrieve experiment
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - experiments
      summary: create experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: EXP0001
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /experiments/{experiment_id}:
    put:
      tags:
        - experiments
      summary: update experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: EXP0001
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: experiment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /measures/{experiment_id}:
    get:
      tags:
        - measures
      summary: retrieve measures
      parameters:
        - name: experiment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /scientists-experiments/:
    get:
      tags:
        - scientist/experiment
      summary: retrieve scientists/ experiment
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /scientists-experiments/{experiment_id}/{scientist_id}:
    post:
      tags:
        - scientist/experiment
      summary: associate scientists to experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: experiment_id
          in: path
          schema:
            type: string
          required: true
        - name: scientist_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
